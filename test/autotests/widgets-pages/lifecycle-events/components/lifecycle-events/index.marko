class {
    onCreate() {
        if (typeof window !== 'undefined') {
            throw new Error('onCreate should not be called in the browser');
        }
        if (this.state !== undefined) {
            throw new Error('this.state should be undefined');
        }
        this.state = {
            events: ['onCreate']
        }
    }

    onRender(out) {
        if (typeof window !== 'undefined') {
            throw new Error('onRender should not be called in the browser');
        }

        this.state.events.push('onRender');

        if (!out || !out.write) {
            throw new Error('"out" argument expected');
        }
    }

    onInput(input) {
        if (typeof window !== 'undefined') {
            throw new Error('onInput should not be called in the browser');
        }

        this.state.events.push('onInput[' + input.name + ']');
    }

    onMount() {
        var widgetsLookup = window.widgets || (window.widgets = {});
        widgetsLookup['lifecycle-events'] = this;
    }
}

<div>
    Hello <span.name>${input.name}</span>!
</div>
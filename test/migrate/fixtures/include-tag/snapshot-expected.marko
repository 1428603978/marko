<!-- test/migrate/fixtures/include-tag/template.marko -->

import ExampleA from "./example-a.marko"
import ExampleB from "./example-b.marko"
import ExampleC from "./example-c/index.marko"
import ExampleD_1 from "./example-d.marko"
import ExampleE from "./example-e/index.marko"
import ExampleF from "../../../hello/example-f.marko"
import ExampleF_1 from "../../../hello2/example-f.marko"
import ExampleH from "../../../hello/example-h/index.marko"

<!-- Import: basic -->
<${ExampleA}/>
<!-- Import: duplicated -->
<${ExampleA} x=1/>
<!-- Import: with attributes -->
<${ExampleB} ...{
    a: 1
} b=2/>
<!-- Import: index -->
<${ExampleC}/>
<!-- Import: name conflict -->
$ const ExampleD = undefined;
<${ExampleD_1}/>
<!-- Import: with body -->
<${ExampleE}>
    <div>Hi</div>
</>
<!-- Import: complex path -->
<${ExampleF}/>
<!-- Import: complex path name conflict -->
<${ExampleF_1}/>
<!-- Import: complex path index -->
<${ExampleH}/>
<!-- Dynamic: basic -->
<if(typeof input.x === "string")>${input.x}</if>
<else>
    <${input.x}/>
</else>
<!-- Dynamic: with attributes -->
<if(typeof input.x === "string")>${input.x}</if>
<else>
    <${input.x} ...{
        a: 1
    } b=2/>
</else>
<!-- Dynamic: with body -->
<if(typeof input.x === "string")>${input.x}</if>
<else>
    <${input.x}>
        <div>Hi</div>
    </>
</else>
<!-- Directive -->
<div>
    <span/>
    <if(typeof x === "string")>${x}</if>
    <else>
        <${x} ...{
            a: 1
        }/>
    </else>
</div>
